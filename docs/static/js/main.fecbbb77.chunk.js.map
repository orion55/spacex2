{"version":3,"sources":["components/Card/styles.module.css","app/styles.module.css","components/Card/index.js","config/config.js","selector/cards.js","containers/CardsList/index.js","slices/pageSlice.js","containers/Paginations/index.js","components/Loader/index.js","services/backend.js","slices/launchesSlice.js","components/FilterSelector/index.js","slices/siteSlice.js","slices/rocketSlice.js","selector/list.js","containers/FilterList/index.js","app/App.js","store/store.js","serviceWorker.js","index.js","containers/CardsList/styles.module.css","components/FilterSelector/styles.module.css","containers/Paginations/styles.module.css","components/Loader/styles.module.css"],"names":["module","exports","Card","props","name","date","details","image","className","styles","card","card__picture","src","alt","card__img","color","size","card__wrap","card__box","card__title","card__date","card__desc","getCards","createSelector","state","launches","items","map","flight_number","mission_name","launch_date_unix","mission_patch_small","links","site_id","launch_site","rocket_id","rocket","id","format","fromUnixTime","siteId","rocketId","getFilters","launchSite","cards","options","filter","getPage","page","filterCards","activePage","slice","config","CardsList","pageCards","useSelector","cardslist","isEmpty","cardslist__nodata","item","pageSlice","createSlice","initialState","reducers","set","action","payload","first","clear","actions","selectPage","Paginations","useState","maxPages","setMaxPages","dispatch","useDispatch","useEffect","Math","ceil","length","pagination","Pagination","number","push","Item","active","onClick","event","preventDefault","handleClick","getPages","Loader","loader","Spinner","animation","variant","fetch","method","headers","Accept","timeout","response","ok","Error","status","json","launchesSlice","load","selectLaunches","FilterSelector","title","onChange","filter__title","Form","Control","as","defaultValue","launchSiteSlice","rocketSlice","getLaunchSite","sortBy","uniqBy","site_name","getRocket","rocket_name","FilterList","launchSiteOptions","rocketOptions","handleChange","type","value","target","result","find","setRocketId","App","error","setError","a","BackendService","getLaunches","toString","fetchData","Container","app__main","app__header","Row","app__row","app__title","app__filter","Alert","app__error","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fecbbb77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__mLOut\",\"card__picture\":\"styles_card__picture__21diI\",\"card__img\":\"styles_card__img__1D9Ld\",\"card__wrap\":\"styles_card__wrap__3Nd71\",\"card__box\":\"styles_card__box__3XRl7\",\"card__title\":\"styles_card__title__psDQf\",\"card__date\":\"styles_card__date__1CCyM\",\"card__desc\":\"styles_card__desc__1kpcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__title\":\"styles_app__title__2DPHp\",\"app__filter\":\"styles_app__filter__2DmWZ\",\"app__error\":\"styles_app__error__Q_plS\",\"app__main\":\"styles_app__main__1hywK\",\"app__header\":\"styles_app__header__3_5ol\",\"app__row\":\"styles_app__row__3DMvH\"};","import React from 'react';\r\nimport { CardImage } from 'react-bootstrap-icons';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Card(props) {\r\n  const {\r\n    name, date, details, image,\r\n  } = props;\r\n\r\n  const getImage = () => {\r\n    if (image) return <img src={image} alt={name} className={styles.card__img} />;\r\n    return <CardImage color=\"gray\" size={150} />;\r\n  };\r\n\r\n  return (\r\n    <article className={styles.card}>\r\n      <div className={styles.card__picture}>\r\n        {getImage()}\r\n      </div>\r\n      <div className={styles.card__wrap}>\r\n        <header className={styles.card__box}>\r\n          {name && <h4 className={styles.card__title}>{name}</h4>}\r\n          {date && <time className={styles.card__date}>{date}</time>}\r\n        </header>\r\n        {details && <div className={styles.card__desc}>{details}</div>}\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","export default {\r\n  API: 'https://api.spacexdata.com/v3/launches',\r\n  MAX_POSTS: 10,\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport fromUnixTime from 'date-fns/fromUnixTime';\r\nimport format from 'date-fns/format';\r\nimport filter from 'lodash/filter';\r\nimport config from '../config/config';\r\n\r\nexport const getCards = createSelector(\r\n  (state) => state.launches,\r\n  (items) => items\r\n        && items.map(({\r\n          flight_number,\r\n          mission_name,\r\n          launch_date_unix,\r\n          details,\r\n          links: { mission_patch_small },\r\n          launch_site: { site_id },\r\n          rocket: { rocket_id },\r\n        }) => ({\r\n          id: flight_number + launch_date_unix,\r\n          name: mission_name || null,\r\n          date: format(fromUnixTime(launch_date_unix), 'dd.MM.yyyy') || null,\r\n          details: (details) || 'upcoming',\r\n          image: mission_patch_small,\r\n          siteId: site_id,\r\n          rocketId: rocket_id,\r\n        })),\r\n);\r\n\r\nexport const getFilters = createSelector(\r\n  [getCards,\r\n    (state) => state.launchSite,\r\n    (state) => state.rocket],\r\n  (cards, launchSite, rocket) => {\r\n    if (!cards) return null;\r\n\r\n    if (launchSite || rocket) {\r\n      const options = { };\r\n      if (launchSite) options.siteId = launchSite;\r\n      if (rocket) options.rocketId = rocket;\r\n      return filter(cards, options);\r\n    }\r\n    return cards;\r\n  },\r\n);\r\n\r\nexport const getPage = createSelector(\r\n  [getFilters,\r\n    (state) => state.page],\r\n  (filterCards, activePage) => {\r\n    if (!filterCards) return null;\r\n    return filterCards.slice((activePage - 1) * config.MAX_POSTS, activePage * config.MAX_POSTS);\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport styles from './styles.module.css';\r\nimport Card from '../../components/Card';\r\nimport { getPage } from '../../selector/cards';\r\n\r\nfunction CardsList() {\r\n  const pageCards = useSelector(getPage);\r\n\r\n  const getCardsList = () => pageCards.map((item) => (<Card key={item.id} {...item} />));\r\n\r\n  return (\r\n    <div className={styles.cardslist}>\r\n      {isEmpty(pageCards)\r\n        ? (\r\n          <h4 className={styles.cardslist__nodata}>No data found</h4>\r\n        )\r\n        : getCardsList()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardsList;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const pageSlice = createSlice({\r\n  name: 'page',\r\n  initialState: 1,\r\n  reducers: {\r\n    set: (state, action) => action.payload,\r\n    first: () => 1,\r\n    clear: () => 0,\r\n  },\r\n});\r\n\r\nexport const { set, first, clear } = pageSlice.actions;\r\n\r\nexport const selectPage = (state) => state.page;\r\n\r\nexport default pageSlice.reducer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './styles.module.css';\r\nimport config from '../../config/config';\r\nimport { selectPage, set } from '../../slices/pageSlice';\r\nimport { getFilters } from '../../selector/cards';\r\n\r\nfunction Paginations() {\r\n  const pageCards = useSelector(getFilters);\r\n  const activePage = useSelector(selectPage);\r\n  const [maxPages, setMaxPages] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (pageCards) {\r\n      setMaxPages(Math.ceil(pageCards.length / config.MAX_POSTS));\r\n    }\r\n  }, [pageCards]);\r\n\r\n  if (!maxPages) return null;\r\n\r\n  const handleClick = (event, number) => {\r\n    event.preventDefault();\r\n    dispatch(set(number));\r\n  };\r\n\r\n  const getPages = () => {\r\n    const items = [];\r\n    for (let number = 1; number <= maxPages; number += 1) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === activePage} onClick={(event) => handleClick(event, number)}>\r\n          {number}\r\n        </Pagination.Item>,\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.pagination}>\r\n      <Pagination>{getPages()}</Pagination>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Paginations;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <Spinner animation=\"border\" variant=\"primary\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import config from '../config/config';\r\n\r\nclass BackendService {\r\n  async getLaunches() {\r\n    const response = await fetch(config.API, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      timeout: 0,\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Error loading data, HTTP status ${response.status}`,\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n}\r\n\r\nexport default new BackendService();\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport BackendService from '../services/backend';\r\n\r\nexport const launchesSlice = createSlice({\r\n  name: 'launches',\r\n  initialState: null,\r\n  reducers: {\r\n    load: (state, action) => action.payload,\r\n    clear: () => null,\r\n  },\r\n});\r\n\r\nexport const { load, clear } = launchesSlice.actions;\r\n\r\nexport const loadLaunches = () => async (dispatch) => {\r\n  const items = await BackendService.getLaunches();\r\n  if (items) dispatch(load(items));\r\n};\r\n\r\nexport const selectLaunches = (state) => state.launches;\r\n\r\nexport default launchesSlice.reducer;\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport styles from './styles.module.css';\r\n\r\nfunction FilterSelector(props) {\r\n  const { title, items, onChange } = props;\r\n\r\n  if (!items) return null;\r\n\r\n  const getOptions = () => items.map((item) => <option key={item.id}>{item.name}</option>);\r\n\r\n  return (\r\n    <div className={styles.filter}>\r\n      {title && <h4 className={styles.filter__title}>{title}</h4>}\r\n      <Form>\r\n        <Form.Control as=\"select\" defaultValue=\"\" onChange={onChange}>\r\n          <option key=\"0\">-</option>\r\n          {getOptions()}\r\n        </Form.Control>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterSelector;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { first } from './pageSlice';\r\n\r\nexport const launchSiteSlice = createSlice({\r\n  name: 'launchSite',\r\n  initialState: null,\r\n  reducers: {\r\n    set: (state, action) => action.payload,\r\n    clear: () => null,\r\n  },\r\n});\r\n\r\nexport const { set, clear } = launchSiteSlice.actions;\r\n\r\nexport const selectLaunchSite = (state) => state.launchSite;\r\n\r\nexport const setSiteId = (id) => (dispatch) => {\r\n  dispatch(set(id));\r\n  dispatch(first());\r\n};\r\n\r\nexport default launchSiteSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { first } from './pageSlice';\r\n\r\nexport const rocketSlice = createSlice({\r\n  name: 'rocket',\r\n  initialState: null,\r\n  reducers: {\r\n    set: (state, action) => action.payload,\r\n    clear: () => null,\r\n  },\r\n});\r\n\r\nexport const { set, clear } = rocketSlice.actions;\r\n\r\nexport const selectRocket = (state) => state.rocket;\r\n\r\nexport const setRocketId = (id) => (dispatch) => {\r\n  dispatch(set(id));\r\n  dispatch(first());\r\n};\r\n\r\nexport default rocketSlice.reducer;\r\n","import { createSelector } from 'reselect';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport sortBy from 'lodash/sortBy';\r\n\r\nexport const getLaunchSite = createSelector(\r\n  (state) => state.launches,\r\n  (items) => items\r\n      && sortBy(\r\n        uniqBy(items.map(({ launch_site: { site_id, site_name } }) => ({ id: site_id, name: site_name })),\r\n          'id'),\r\n        'name',\r\n      ),\r\n);\r\n\r\nexport const getRocket = createSelector(\r\n  (state) => state.launches,\r\n  (items) => items\r\n        && sortBy(\r\n          uniqBy(items.map(({ rocket: { rocket_id, rocket_name } }) => ({ id: rocket_id, name: rocket_name })),\r\n            'id'),\r\n          'name',\r\n        ),\r\n);\r\n","import React from 'react';\r\nimport find from 'lodash/find';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FilterSelector from '../../components/FilterSelector';\r\nimport { setSiteId } from '../../slices/siteSlice';\r\nimport { setRocketId } from '../../slices/rocketSlice';\r\nimport { getLaunchSite, getRocket } from '../../selector/list';\r\n\r\nfunction FilterList() {\r\n  const launchSiteOptions = useSelector(getLaunchSite);\r\n  const rocketOptions = useSelector(getRocket);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!launchSiteOptions || !rocketOptions) return null;\r\n\r\n  const handleChange = (event, type) => {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target;\r\n    const options = type === 'site' ? launchSiteOptions : rocketOptions;\r\n    const result = (value === '-') ? null : find(options, ['name', value]).id;\r\n    if (type === 'site') {\r\n      dispatch(setSiteId(result));\r\n    } else {\r\n      dispatch(setRocketId(result));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FilterSelector\r\n        title=\"Launch Site\"\r\n        items={launchSiteOptions}\r\n        onChange={(event) => handleChange(event, 'site')}\r\n      />\r\n      <FilterSelector\r\n        title=\"Rocket\"\r\n        items={rocketOptions}\r\n        onChange={(event) => handleChange(event, 'rocket')}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FilterList;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './styles.module.css';\r\nimport CardsList from '../containers/CardsList';\r\nimport Paginations from '../containers/Paginations';\r\nimport Loader from '../components/Loader';\r\nimport { loadLaunches, selectLaunches } from '../slices/launchesSlice';\r\nimport FilterList from '../containers/FilterList';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const launches = useSelector(selectLaunches);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await dispatch(loadLaunches());\r\n      } catch (e) {\r\n        setError(e.toString());\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const getContainer = () => (\r\n    <Container className={styles.app__main}>\r\n      <header className={styles.app__header}>\r\n        <Row className={styles.app__row}>\r\n          <h1 className={styles.app__title}>Launches</h1>\r\n        </Row>\r\n        <Row className={`${styles.app__row} ${styles.app__filter}`}>\r\n          <FilterList />\r\n        </Row>\r\n      </header>\r\n      <CardsList />\r\n      <Paginations />\r\n    </Container>\r\n  );\r\n\r\n  const getError = () => (\r\n    <Container>\r\n      <Alert variant=\"danger\" className={styles.app__error}>\r\n        {error}\r\n      </Alert>\r\n    </Container>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      { launches ? getContainer() : error ? getError() : <Loader />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport launchesSlice from '../slices/launchesSlice';\r\nimport launchSiteSlice from '../slices/siteSlice';\r\nimport rocketSlice from '../slices/rocketSlice';\r\nimport pageSlice from '../slices/pageSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    launches: launchesSlice,\r\n    launchSite: launchSiteSlice,\r\n    rocket: rocketSlice,\r\n    page: pageSlice,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the store load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web store is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different store. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './app/App';\r\nimport store from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardslist\":\"styles_cardslist__2OJQr\",\"cardslist__nodata\":\"styles_cardslist__nodata__2dqKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"styles_filter__3uVFq\",\"filter__title\":\"styles_filter__title__31gYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"styles_pagination__36Mg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__2oSJZ\"};"],"sourceRoot":""}